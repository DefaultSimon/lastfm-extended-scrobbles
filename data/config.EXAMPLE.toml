##
# Fill out the settings below before running the script.
##
[Authentication]
# Obtained from https://www.last.fm/api/account/create
lastfm_api_key = ""
lastfm_api_secret = ""

[SourcePaths]
# Can use {DATA_DIR} as a placeholder
scrobbles_json_path = "{DATA_DIR}/my_scrobbles.json"
# The root directory of your music library
music_library_root = ""

[DestinationPaths]
# Where to store the results
xlsx_ouput_path = "{DATA_DIR}/output.xlsx"

##
# Values below are configurable, but should be left alone in most cases.
##
[Cache]
# Can use {DATA_DIR}
cache_dir = "{DATA_DIR}/cache"
# For other values you can already use {CACHE_DIR}
library_cache_file = "{CACHE_DIR}/library_cache.json"

[Logging]
# Verbosities (python's logging library):
#  critical
#  error
#  warning
#  info
#  debug
#  notset
verbosity = "info"
# Unless you know what you are doing, you should probably leave the defaults
cache_log_interval = 50
parse_log_interval = 50

[FuzzyMatching]
# Min Levenshtein Distance when matching by title, see the fuzzywuzzy package for more info
local_library_artist_min_match = 80
# Two values below are used after the artist name was matched, so they should be very high
local_library_title_min_match = 88
local_library_album_min_match = 92

youtube_title_min_match = 65

[Genres]
# Ignore tags with Last.fm weight below this value
min_genre_weight = 15

# Uses the most specific genres of each subtree
# use_most_specific = true

# Output at most max_genre_count genres
max_genre_count = 3
# Throw away Last.fm corrections that are too distant from our search
min_lastfm_suggestion_similarity = 88
